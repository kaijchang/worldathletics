# Generated by ariadne-codegen on 2023-06-06 10:50
# Source: graphql/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetUpcomingCompetitions(BaseModel):
    get_upcoming_competitions: Optional[
        List[Optional["GetUpcomingCompetitionsGetUpcomingCompetitions"]]
    ] = Field(alias="getUpcomingCompetitions")


class GetUpcomingCompetitionsGetUpcomingCompetitions(BaseModel):
    competitions: Optional[
        List[Optional["GetUpcomingCompetitionsGetUpcomingCompetitionsCompetitions"]]
    ]
    label: Optional[str]


class GetUpcomingCompetitionsGetUpcomingCompetitionsCompetitions(BaseModel):
    competition_id: Optional[str] = Field(alias="competitionId")
    date_range: Optional[str] = Field(alias="dateRange")
    end_date: Optional[str] = Field(alias="endDate")
    is_next_event: Optional[bool] = Field(alias="isNextEvent")
    name: Optional[str]
    start_date: Optional[str] = Field(alias="startDate")
    venue: Optional[str]
    url_slug: Optional[str] = Field(alias="urlSlug")


GetUpcomingCompetitions.update_forward_refs()
GetUpcomingCompetitionsGetUpcomingCompetitions.update_forward_refs()
GetUpcomingCompetitionsGetUpcomingCompetitionsCompetitions.update_forward_refs()
