# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetEventTeamStandings(BaseModel):
    get_event_team_standings: Optional[
        List[Optional["GetEventTeamStandingsGetEventTeamStandings"]]
    ] = Field(alias="getEventTeamStandings")


class GetEventTeamStandingsGetEventTeamStandings(BaseModel):
    id: Optional[int]
    updated_on: Optional[Any] = Field(alias="updatedOn")
    hash: Optional[str]
    event_id: Optional[int] = Field(alias="eventId")
    rank: Optional[int]
    team_name: Optional[str] = Field(alias="teamName")
    team_country_code: Optional[str] = Field(alias="teamCountryCode")
    team_id: Optional[int] = Field(alias="teamId")
    team_id__w_a: Optional[int] = Field(alias="teamId_WA")
    event_id__w_a: Optional[int] = Field(alias="eventId_WA")
    event_sub_category_code: Optional[str] = Field(alias="eventSubCategoryCode")
    sex_code: Optional[str] = Field(alias="sexCode")
    sex_name: Optional[str] = Field(alias="sexName")
    standing_mark: Optional[str] = Field(alias="standingMark")
    event_team_standing_order: Optional[int] = Field(alias="eventTeamStandingOrder")


GetEventTeamStandings.update_forward_refs()
GetEventTeamStandingsGetEventTeamStandings.update_forward_refs()
