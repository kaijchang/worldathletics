# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetAthleteProfileAthleteRepresentative(BaseModel):
    get_athlete_profile_athlete_representative: Optional[
        "GetAthleteProfileAthleteRepresentativeGetAthleteProfileAthleteRepresentative"
    ] = Field(alias="getAthleteProfileAthleteRepresentative")


class GetAthleteProfileAthleteRepresentativeGetAthleteProfileAthleteRepresentative(
    BaseModel
):
    athlete_representative_id: Optional[int] = Field(alias="athleteRepresentativeId")
    country_code: Optional[str] = Field(alias="countryCode")
    telephone: Optional[List[Optional[str]]]
    first_name: Optional[str] = Field(alias="firstName")
    website: Optional[List[Optional[str]]]
    last_name: Optional[str] = Field(alias="lastName")
    mobile: Optional[List[Optional[str]]]
    country: Optional[str]
    email: Optional[List[Optional[str]]]


GetAthleteProfileAthleteRepresentative.update_forward_refs()
GetAthleteProfileAthleteRepresentativeGetAthleteProfileAthleteRepresentative.update_forward_refs()
