# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetCountries(BaseModel):
    get_countries: Optional[List[Optional["GetCountriesGetCountries"]]] = Field(
        alias="getCountries"
    )


class GetCountriesGetCountries(BaseModel):
    updated_on: Optional[Any] = Field(alias="updatedOn")
    hash: Optional[str]
    id: Optional[str]
    country_name: Optional[str] = Field(alias="countryName")
    country_order: Optional[int] = Field(alias="countryOrder")
    area_code: Optional[str] = Field(alias="areaCode")
    area_name: Optional[str] = Field(alias="areaName")
    area_order: Optional[int] = Field(alias="areaOrder")
    is_valid: Optional[bool] = Field(alias="isValid")
    area_name_url_slug: Optional[str] = Field(alias="areaNameUrlSlug")
    country_name_url_slug: Optional[str] = Field(alias="countryNameUrlSlug")


GetCountries.update_forward_refs()
GetCountriesGetCountries.update_forward_refs()
