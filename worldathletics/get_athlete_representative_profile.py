# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetAthleteRepresentativeProfile(BaseModel):
    get_athlete_representative_profile: Optional[
        "GetAthleteRepresentativeProfileGetAthleteRepresentativeProfile"
    ] = Field(alias="getAthleteRepresentativeProfile")


class GetAthleteRepresentativeProfileGetAthleteRepresentativeProfile(BaseModel):
    athlete_representative_id: Optional[int] = Field(alias="athleteRepresentativeId")
    country_code: Optional[str] = Field(alias="countryCode")
    instagram: Optional[List[Optional[str]]]
    telephone: Optional[List[Optional[str]]]
    facebook: Optional[List[Optional[str]]]
    twitter: Optional[List[Optional[str]]]
    website: Optional[List[Optional[str]]]
    youtube: Optional[List[Optional[str]]]
    first_name: Optional[str] = Field(alias="firstName")
    mobile: Optional[List[Optional[str]]]
    last_name: Optional[str] = Field(alias="lastName")
    toplist: Optional[
        "GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplist"
    ]
    country: Optional[str]
    email: Optional[List[Optional[str]]]


class GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplist(BaseModel):
    athletes: Optional[
        List[
            Optional[
                "GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplistAthletes"
            ]
        ]
    ]
    toplist_date: Optional[str] = Field(alias="toplistDate")


class GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplistAthletes(
    BaseModel
):
    athlete_representative_id: Optional[int] = Field(alias="athleteRepresentativeId")
    country_code: Optional[str] = Field(alias="countryCode")
    first_name: Optional[str] = Field(alias="firstName")
    birthdate: Optional[str]
    athlete_id: Optional[int] = Field(alias="athleteId")
    last_name: Optional[str] = Field(alias="lastName")
    country: Optional[str]
    gender: Optional[str]


GetAthleteRepresentativeProfile.update_forward_refs()
GetAthleteRepresentativeProfileGetAthleteRepresentativeProfile.update_forward_refs()
GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplist.update_forward_refs()
GetAthleteRepresentativeProfileGetAthleteRepresentativeProfileToplistAthletes.update_forward_refs()
