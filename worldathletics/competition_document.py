# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class CompetitionDocument(BaseModel):
    competition_document: Optional[
        List[Optional["CompetitionDocumentCompetitionDocument"]]
    ] = Field(alias="competitionDocument")


class CompetitionDocumentCompetitionDocument(BaseModel):
    event_id: Optional[int] = Field(alias="eventId")
    event_id__w_a: Optional[int] = Field(alias="eventId_WA")
    file_name: Optional[str] = Field(alias="fileName")
    file_path: Optional[str] = Field(alias="filePath")
    hash: Optional[str]
    id: Optional[int]
    phase_id: Optional[int] = Field(alias="phaseId")
    type_id: Optional[int] = Field(alias="typeId")
    type_name: Optional[str] = Field(alias="typeName")
    type_order: Optional[int] = Field(alias="typeOrder")
    unit_id: Optional[int] = Field(alias="unitId")
    updated_on: Optional[Any] = Field(alias="updatedOn")


CompetitionDocument.update_forward_refs()
CompetitionDocumentCompetitionDocument.update_forward_refs()
