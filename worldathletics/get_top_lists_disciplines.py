# Generated by ariadne-codegen on 2023-06-06 10:49
# Source: graphql/queries.graphql

from typing import Any, List, Optional

from pydantic import Field

from .base_model import BaseModel


class GetTopListsDisciplines(BaseModel):
    get_top_lists_disciplines: Optional[
        List[Optional["GetTopListsDisciplinesGetTopListsDisciplines"]]
    ] = Field(alias="getTopListsDisciplines")


class GetTopListsDisciplinesGetTopListsDisciplines(BaseModel):
    discipline_name: Optional[str] = Field(alias="disciplineName")
    discipline_code: Optional[str] = Field(alias="disciplineCode")
    type_name: Optional[str] = Field(alias="typeName")
    men: Optional[bool]
    women: Optional[bool]
    is_road: Optional[bool] = Field(alias="isRoad")
    is_walk: Optional[bool] = Field(alias="isWalk")
    is_wind: Optional[bool] = Field(alias="isWind")
    is_relay: Optional[bool] = Field(alias="isRelay")
    is_track: Optional[bool] = Field(alias="isTrack")
    is_field: Optional[bool] = Field(alias="isField")
    is_indoor: Optional[bool] = Field(alias="isIndoor")
    is_outdoor: Optional[bool] = Field(alias="isOutdoor")
    is_combined: Optional[bool] = Field(alias="isCombined")
    is_reaction: Optional[bool] = Field(alias="isReaction")
    is_valid_i_a_a_f: Optional[bool] = Field(alias="isValidIAAF")
    order: Optional[int]
    type_order: Optional[int] = Field(alias="typeOrder")
    id: Optional[str]
    name: Optional[str]
    hash: Optional[str]
    type_code: Optional[str] = Field(alias="typeCode")
    name_url_slug: Optional[str] = Field(alias="nameUrlSlug")
    type_name_url_slug: Optional[str] = Field(alias="typeNameUrlSlug")
    updated_on: Optional[Any] = Field(alias="updatedOn")


GetTopListsDisciplines.update_forward_refs()
GetTopListsDisciplinesGetTopListsDisciplines.update_forward_refs()
