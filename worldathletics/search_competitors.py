# Generated by ariadne-codegen on 2023-06-06 10:50
# Source: graphql/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class SearchCompetitors(BaseModel):
    search_competitors: Optional[
        List[Optional["SearchCompetitorsSearchCompetitors"]]
    ] = Field(alias="searchCompetitors")


class SearchCompetitorsSearchCompetitors(BaseModel):
    aa_athlete_id: Optional[str] = Field(alias="aaAthleteId")
    family_name: Optional[str] = Field(alias="familyName")
    given_name: Optional[str] = Field(alias="givenName")
    birth_date: Optional[str] = Field(alias="birthDate")
    disciplines: Optional[str]
    iaaf_id: Optional[int] = Field(alias="iaafId")
    gender: Optional[str]
    country: Optional[str]
    url_slug: Optional[str] = Field(alias="urlSlug")


SearchCompetitors.update_forward_refs()
SearchCompetitorsSearchCompetitors.update_forward_refs()
