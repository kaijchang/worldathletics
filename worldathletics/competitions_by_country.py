# Generated by ariadne-codegen on 2023-06-06 10:50
# Source: graphql/queries.graphql

from typing import List, Optional

from pydantic import Field

from .base_model import BaseModel


class CompetitionsByCountry(BaseModel):
    competitions_by_country: Optional[
        "CompetitionsByCountryCompetitionsByCountry"
    ] = Field(alias="competitionsByCountry")


class CompetitionsByCountryCompetitionsByCountry(BaseModel):
    results: Optional[
        List[Optional["CompetitionsByCountryCompetitionsByCountryResults"]]
    ]
    parameters: Optional["CompetitionsByCountryCompetitionsByCountryParameters"]


class CompetitionsByCountryCompetitionsByCountryResults(BaseModel):
    area: Optional[str]
    competition_group: Optional[str] = Field(alias="competitionGroup")
    date_range: Optional[str] = Field(alias="dateRange")
    disciplines: Optional[str]
    end_date: Optional[str] = Field(alias="endDate")
    has_results: Optional[bool] = Field(alias="hasResults")
    has_startlist: Optional[bool] = Field(alias="hasStartlist")
    id: Optional[int]
    match_type: Optional[str] = Field(alias="matchType")
    name: Optional[str]
    ranking_category: Optional[str] = Field(alias="rankingCategory")
    start_date: Optional[str] = Field(alias="startDate")
    undetermined_competition_period: Optional[str] = Field(
        alias="undeterminedCompetitionPeriod"
    )
    venue: Optional[str]


class CompetitionsByCountryCompetitionsByCountryParameters(BaseModel):
    country_of_residence: Optional[str] = Field(alias="countryOfResidence")
    limit: Optional[int]
    preferred_country: Optional[str] = Field(alias="preferredCountry")


CompetitionsByCountry.update_forward_refs()
CompetitionsByCountryCompetitionsByCountry.update_forward_refs()
CompetitionsByCountryCompetitionsByCountryResults.update_forward_refs()
CompetitionsByCountryCompetitionsByCountryParameters.update_forward_refs()
